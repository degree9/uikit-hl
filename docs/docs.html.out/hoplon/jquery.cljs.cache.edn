{:rename-macros {}, :renames {}, :externs {jQuery {Event {prototype {target {}}}}, Object {fadeIn {}, text {}, data {}, focusout {}, attr {}, select {}, html {}, removeAttr {}, offset {}, top {}, css {}, toggleClass {}, val {}, slideDown {}, animate {}, fadeOut {}, toggle {}, slideUp {}, hide {}, prop {}, focus {}, on {}}, Error {}, setTimeout {}}, :use-macros {with-let javelin.core, cell= javelin.core, prop-cell javelin.core, cache-key hoplon.core, with-timeout hoplon.core}, :excludes #{}, :name hoplon.jquery, :imports nil, :requires {hoplon.core hoplon.core, cljsjs.jquery cljsjs.jquery}, :uses {do! hoplon.core, on! hoplon.core, normalize-class hoplon.core, when-dom hoplon.core}, :defs {set-attributes! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :line 10, :column 7, :end-line 10, :end-column 22, :arglists (quote ([this kvs] [this k v & kvs])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}}, :name hoplon.jquery/set-attributes!, :variadic true, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}, :method-params ([this kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists ([this kvs] [this k v & kvs])}, set-styles! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :line 20, :column 7, :end-line 20, :end-column 18, :arglists (quote ([this kvs] [this k v & kvs])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}}, :name hoplon.jquery/set-styles!, :variadic true, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([this kvs]), :arglists ([this kvs] [this k v & kvs]), :arglists-meta (nil nil)}, :method-params ([this kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists ([this kvs] [this k v & kvs])}, text-val! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([e] [e v])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}}, :name hoplon.jquery/text-val!, :variadic false, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}, :method-params ([e] [e v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists ([e] [e v])}, check-val! {:protocol-inline nil, :meta {:file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :line 34, :column 7, :end-line 34, :end-column 17, :arglists (quote ([e] [e v])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}}, :name hoplon.jquery/check-val!, :variadic false, :file "/Users/matt/.boot/cache/tmp/Users/matt/Projects/flyboarder/uikit-hl/oae/-xv2gqa/docs.html.out/hoplon/jquery.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([e] [e v]), :arglists ([e] [e v]), :arglists-meta (nil nil)}, :method-params ([e] [e v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists ([e] [e v])}}, :require-macros {javelin.core javelin.core, hoplon.core hoplon.core}, :cljs.analyzer/constants {:seen #{:data/* :fade-toggle :prop/* :css/* :svg/* :value :slide-toggle :css :toggle :hoplon.core/default :class :focus-select :focus :attr/* :html/* :scroll-to :select :html :text :scrollTop :attr}, :order [:hoplon.core/default :attr :css/* :html/* :svg/* :attr/* :prop/* :data/* :css :value :class :toggle :slide-toggle :fade-toggle :focus :select :focus-select :text :html :scroll-to :scrollTop]}, :doc nil}